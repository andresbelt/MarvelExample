apply plugin: (Plugins.kotlinLibraryAndroid)
apply plugin: (Plugins.kotlinAndroid)
apply plugin: (Plugins.kotlinAndroidExtensions)
apply plugin: (Plugins.kotlinKapt)

android {
    compileSdkVersion(AndroidSdk.compile)

    defaultConfig {
        minSdkVersion(AndroidSdk.min)
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "MARVEL_API_BASE_URL", MARVEL_API_BASE_URL
            buildConfigField "String", "MARVEL_API_PUBLIC_KEY", MARVEL_API_PUBLIC_KEY
            buildConfigField "String", "MARVEL_API_PRIVATE_KEY", MARVEL_API_PRIVATE_KEY

        }
        release {
            buildConfigField "String", "MARVEL_API_BASE_URL", MARVEL_API_BASE_URL
            buildConfigField "String", "MARVEL_API_PUBLIC_KEY", MARVEL_API_PUBLIC_KEY
            buildConfigField "String", "MARVEL_API_PRIVATE_KEY", MARVEL_API_PRIVATE_KEY

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    buildFeatures {
        dataBinding true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api Libraries.room_ktx
    api Libraries.room_runtime
    implementation project(path: ':domain')
    kapt Libraries.room_compiler

    api Libraries.timber
    api Libraries.retrofit
    api Libraries.moshi

    api Libraries.dagger
    kapt Libraries.daggerCompiler

    api Libraries.daggerAndroid
    api Libraries.daggerAndroidSupport
    kapt Libraries.daggerAndroidProcessor

    implementation Libraries.lifecycleExtensions
    kapt Libraries.lifecycleCompiler

    implementation Libraries.moshiConverter
    implementation Libraries.loggingInterceptor



    testImplementation TestLibraries.junit
    testImplementation TestLibraries.lifecycleTesting
    testImplementation TestLibraries.coroutine
    testImplementation TestLibraries.mockito
}
